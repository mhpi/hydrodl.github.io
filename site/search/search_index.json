{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"HydroDL","text":"<p>This code contains deep learning code used to model hydrologic systems from soil moisture to streamflow or from projection to forecast. </p> <p> </p> <p>Major code contributor: Dapeng Feng (PhD, Penn State), Jiangtao Liu (PhD Student., Penn State), Tadd Bindas (PhD Student., Penn State), and Kuai Fang (PhD., Penn State).</p>"},{"location":"#license","title":"License","text":"<p>hydroDL has a Non-Commercial license, as found in the LICENSE file.</p>"},{"location":"Contribute/","title":"Contribute","text":""},{"location":"Contribute/#tbd","title":"TBD","text":""},{"location":"Docs/","title":"Docs","text":""},{"location":"Docs/#tbd","title":"TBD","text":""},{"location":"Example/","title":"Examples","text":"<p>Several examples related to the above papers are presented here. Click the title link to see each example.</p>"},{"location":"Example/#1train-a-lstm-data-integration-model-to-make-streamflow-forecast","title":"1.Train a LSTM data integration model to make streamflow forecast","text":"<p>The dataset used is NCAR CAMELS dataset. Download CAMELS following this link.  Please download both forcing, observation data <code>CAMELS time series meteorology, observed flow, meta data (.zip)</code> and basin attributes <code>CAMELS Attributes (.zip)</code>.  Put two unzipped folders under the same directory, like <code>your/path/to/Camels/basin_timeseries_v1p2_metForcing_obsFlow</code>, and <code>your/path/to/Camels/camels_attributes_v2.0</code>. Set the directory path <code>your/path/to/Camels</code> as the variable <code>rootDatabase</code> inside the code later.</p> <p>Computational benchmark: training of CAMELS data (w/ or w/o data integration) with 671 basins, 10 years, 300 epochs, in ~1 hour with GPU.</p>"},{"location":"Installation/","title":"Installation","text":""},{"location":"Installation/#installation","title":"Installation","text":"<p>There are two different methods for hydroDL installation:</p>"},{"location":"Installation/#create-a-new-environment-then-activate-it","title":"Create a new environment, then activate it","text":"<pre><code>conda create -n mhpihydrodl python=3.7\nconda activate mhpihydrodl\n</code></pre>"},{"location":"Installation/#using-pypi-stable-package","title":"Using PyPI (stable package)","text":"<p>Install our hydroDL stable package from pip (Python version&gt;=3.0)</p> <pre><code>pip install hydroDL\n</code></pre>"},{"location":"Installation/#source-latest-version","title":"Source latest version","text":"<p>Install our latest hydroDL package from github</p> <pre><code>git clone https://github.com/mhpi/hydroDL.git\n</code></pre> <p>Note: If you want to run our examples directly, please download the example folder (It contains the code and data for these examples). </p> <p>There exists a small compatibility issue with our code when using the latest pyTorch version. Feel free to contact us if you find any issues or code bugs that you cannot resolve.</p>"},{"location":"Quick_start/","title":"Quick Start:","text":"<p>The detailed code for quick start can be found in tutorial_quick_start.py</p> <p>See below for a brief explanation of the major components you need to run a hydroDL model:</p> <pre><code># imports\nfrom hydroDL.model.crit import RmseLoss\nfrom hydroDL.model.rnn import CudnnLstmModel as LSTM\nfrom hydroDL.model.train import trainModel\nfrom hydroDL.model.test import testModel\n\n# load your training and testing data \n# x: forcing data (pixels, time, features)\n# c: attribute data (pixels, features)\n# y: observed values (pixels, time, 1)\nx_train, c_train, y_train, x_val, c_val, y_val = load_data(...)\n\n# define your model and loss function\nmodel = LSTM(nx=num_variables, ny=1)\nloss_fn = RmseLoss()\n\n# train your model\nmodel = trainModel(model,\n    x_train,\n    y_train,\n    c_train,\n    loss_fn,\n)\n\n# validate your model\npred = testModel(model,\n             x_val,\n             c_val,\n)\n</code></pre>"},{"location":"projects/","title":"Projects","text":"<p>See below for our projects</p> <ul> <li> <p> \\(\\delta\\) HBV-globe1.0-hydroDL (Feng et al. 2023)</p> <p>A differentiable implementation of the HBV Streamflow Model.</p> <p> Read More Here</p> </li> <li> <p> \\(\\delta\\) MC-Juniata-hydroDL2 (Bindas et al. 2023)</p> <p>A differentiable routing method that mimics the classical Muskingum-Cunge routing model over a river network but embeds an NN to infer parameterizations for Manning\u2019s roughness (n) and channel geometries from raw reach-scale attributes like catchment areas and sinuosity. </p> <p> Read More Here</p> </li> </ul>"},{"location":"projects/#citations","title":"Citations","text":"<p>If you find our code to be useful, please cite the following papers:</p> <p>Feng, DP., Lawson, K., and CP. Shen, Mitigating prediction error of deep learning streamflow models in large data-sparse regions with ensemble modeling and soft data, Geophysical Research Letters (2021), https://doi.org/10.1029/2021GL092999</p> <p>Feng, DP, K. Fang and CP. Shen, Enhancing streamflow forecast and extracting insights using continental-scale long-short term memory networks with data integration, Water Resources Research (2020), https://doi.org/10.1029/2019WR026793</p> <p>Shen, CP., A trans-disciplinary review of deep learning research and its relevance for water resources scientists, Water Resources Research. 54(11), 8558-8593, doi: 10.1029/2018WR022643 (2018) https://doi.org/10.1029/2018WR022643</p> <p>Liu, J., Rahmani, F., Lawson, K., &amp; Shen, C. A multiscale deep learning model for soil moisture integrating satellite and in-situ data. Geophysical Research Letters, e2021GL096847 (2022). https://doi.org/10.1029/2021GL096847</p>"},{"location":"projects/bindas_2023/","title":"\\(\\delta\\) MC-Juniata-hydroDL2","text":"<p>Documentation coming soon</p>"},{"location":"projects/bindas_2023/#bibtex-citation","title":"Bibtex Citation","text":"<pre><code>@techreport{bindas2023improving,\n  title={Improving large-basin streamflow simulation using a modular, differentiable, learnable graph model for routing},\n  author={Bindas, Tadd and Tsai, Wen-Ping and Liu, Jiangtao and Rahmani, Farshid and Feng, Dapeng and Bian, Yuchen and Lawson, Kathryn and Shen, Chaopeng},\n  year={2023},\n  institution={Copernicus Meetings}\n}\n</code></pre>"},{"location":"projects/feng_2023/","title":"\\(\\delta\\) HBV-globe1.0-hydroDL","text":"<p>Documentation coming soon</p>"},{"location":"projects/feng_2023/#bibtex-citation","title":"Bibtex Citation","text":"<pre><code>@article{feng2023deep,\n  title={Deep Dive into Global Hydrologic Simulations: Harnessing the Power of Deep Learning and Physics-informed Differentiable Models ($\\delta$HBV-globe1. 0-hydroDL)},\n  author={Feng, Dapeng and Beck, Hylke and de Bruijn, Jens and Sahu, Reetik Kumar and Satoh, Yusuke and Wada, Yoshihide and Liu, Jiangtao and Pan, Ming and Lawson, Kathryn and Shen, Chaopeng},\n  journal={Geoscientific Model Development Discussions},\n  volume={2023},\n  pages={1--23},\n  year={2023},\n  publisher={G{\\\"o}ttingen, Germany}\n}\n</code></pre>"}]}